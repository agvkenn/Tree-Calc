<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tree Work Estimator</title>
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* A little custom touch for better font rendering */
        body {
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8">
        <header class="text-center mb-8">
            <h1 class="text-4xl font-bold text-green-800">Tree Work Estimator</h1>
            <p class="text-lg text-gray-600 mt-2">Estimate your tree service costs accurately.</p>
        </header>

        <div class="max-w-4xl mx-auto bg-white p-8 rounded-2xl shadow-lg">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">

                <!-- Left Column: Inputs -->
                <div class="space-y-6">
                    <!-- Crew Size -->
                    <div>
                        <label for="crewSize" class="block text-sm font-medium text-gray-700 mb-2">Crew Size</label>
                        <input
                            id="crewSize"
                            type="number"
                            min="1"
                            value="1"
                            class="w-full p-3 bg-gray-100 rounded-lg border border-gray-200 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                        />
                    </div>

                    <!-- Job Duration -->
                    <div>
                        <label for="hours" class="block text-sm font-medium text-gray-700 mb-2">Job Duration (Hours)</label>
                        <input
                            id="hours"
                            type="number"
                            min="1"
                            value="1"
                            class="w-full p-3 bg-gray-100 rounded-lg border border-gray-200 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                        />
                    </div>

                    <!-- Equipment -->
                    <div>
                        <h3 class="text-sm font-medium text-gray-700 mb-3">Equipment Needed</h3>
                        <div id="equipment-options" class="space-y-2">
                            <!-- Equipment checkboxes will be generated by JavaScript -->
                        </div>
                    </div>

                     <!-- Hazard Fee -->
                     <div>
                        <label for="hazardFee" class="block text-sm font-medium text-gray-700 mb-2">Hazard Fee ($)</label>
                        <p class="text-xs text-gray-500 mb-2">For high-risk jobs (e.g., near power lines, buildings).</p>
                        <input
                            id="hazardFee"
                            type="number"
                            min="0"
                            step="50"
                            value="0"
                            placeholder="e.g., 250"
                            class="w-full p-3 bg-gray-100 rounded-lg border border-gray-200 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                        />
                    </div>

                    <!-- Miscellaneous Costs -->
                     <div>
                        <label for="miscCosts" class="block text-sm font-medium text-gray-700 mb-2">Miscellaneous Costs ($)</label>
                         <p class="text-xs text-gray-500 mb-2">e.g., Debris removal, travel.</p>
                        <input
                            id="miscCosts"
                            type="number"
                            min="0"
                            step="10"
                            value="0"
                            placeholder="e.g., 100"
                            class="w-full p-3 bg-gray-100 rounded-lg border border-gray-200 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                        />
                    </div>
                </div>

                <!-- Right Column: Estimate -->
                <div class="bg-green-100 p-6 rounded-2xl flex flex-col items-center justify-center text-center border-2 border-dashed border-green-300">
                    <h2 class="text-2xl font-semibold text-green-900 mb-4">Estimated Price Range</h2>
                    <div id="estimate-display" class="text-5xl font-bold text-green-800 tracking-tight">
                        $0.00 - $0.00
                    </div>
                    <p class="text-green-700 mt-3">This is an estimate. Final price may vary.</p>
                </div>
            </div>
        </div>
         <footer class="text-center mt-8 text-sm text-gray-500">
            <p>Tree Work Estimator v1.2 | Created by Gemini</p>
        </footer>
    </div>

    <script>
        // --- DATA AND CONSTANTS ---
        const equipmentOptions = [
            { name: 'Chainsaw (per unit)', rate: 15 },
            { name: 'Chipper', rate: 100 },
            { name: 'Stump Grinder', rate: 125 },
            { name: 'Bucket Truck', rate: 200 },
            { name: 'Crane', rate: 350 },
            { name: 'Skid Steer', rate: 90 },
        ];
        const laborRate = { low: 45, high: 75 };

        // --- DOM ELEMENT REFERENCES ---
        const crewSizeInput = document.getElementById('crewSize');
        const hoursInput = document.getElementById('hours');
        const hazardFeeInput = document.getElementById('hazardFee');
        const miscCostsInput = document.getElementById('miscCosts');
        const equipmentContainer = document.getElementById('equipment-options');
        const estimateDisplay = document.getElementById('estimate-display');

        // --- STATE ---
        let selectedEquipment = [];

        // --- FUNCTIONS ---

        /**
         * Generates and injects equipment checkboxes into the DOM.
         */
        function populateEquipmentOptions() {
            equipmentOptions.forEach(item => {
                const div = document.createElement('div');
                div.className = 'flex items-center';
                
                const checkbox = document.createElement('input');
                checkbox.id = `equip-${item.name.replace(/\s+/g, '-')}`;
                checkbox.type = 'checkbox';
                checkbox.value = item.name;
                checkbox.className = 'h-5 w-5 text-green-600 border-gray-300 rounded focus:ring-green-500 cursor-pointer';
                checkbox.addEventListener('change', handleEquipmentChange);

                const label = document.createElement('label');
                label.htmlFor = checkbox.id;
                label.className = 'ml-3 block text-sm text-gray-800';
                label.textContent = `${item.name} ($${item.rate}/hr)`;

                div.appendChild(checkbox);
                div.appendChild(label);
                equipmentContainer.appendChild(div);
            });
        }

        /**
         * Updates the selectedEquipment array when a checkbox is toggled.
         * @param {Event} e - The change event from the checkbox.
         */
        function handleEquipmentChange(e) {
            const { value, checked } = e.target;
            const equipmentItem = equipmentOptions.find(item => item.name === value);

            if (checked) {
                selectedEquipment.push(equipmentItem);
            } else {
                selectedEquipment = selectedEquipment.filter(item => item.name !== value);
            }
            calculateEstimate();
        }
        
        /**
         * Calculates the total estimate based on current input values and updates the display.
         */
        function calculateEstimate() {
            // Safely parse input values, defaulting to 0 if empty or invalid.
            const numCrewSize = parseInt(crewSizeInput.value) || 0;
            const numHours = parseInt(hoursInput.value) || 0;
            const numHazardFee = parseFloat(hazardFeeInput.value) || 0;
            const numMiscCosts = parseFloat(miscCostsInput.value) || 0;

            // Calculate labor costs
            const baseLaborCost = numCrewSize * numHours;
            const lowLabor = baseLaborCost * laborRate.low;
            const highLabor = baseLaborCost * laborRate.high;

            // Calculate equipment costs
            const equipmentCost = selectedEquipment.reduce((acc, curr) => acc + (curr.rate * numHours), 0);

            // Calculate total estimate
            const lowEstimate = lowLabor + equipmentCost + numHazardFee + numMiscCosts;
            const highEstimate = highLabor + equipmentCost + numHazardFee + numMiscCosts;

            // Update the display
            estimateDisplay.textContent = `$${lowEstimate.toFixed(2)} - $${highEstimate.toFixed(2)}`;
        }

        // --- INITIALIZATION ---

        // Add event listeners to all inputs to recalculate on change.
        crewSizeInput.addEventListener('input', calculateEstimate);
        hoursInput.addEventListener('input', calculateEstimate);
        hazardFeeInput.addEventListener('input', calculateEstimate);
        miscCostsInput.addEventListener('input', calculateEstimate);

        // Populate the equipment options and run the initial calculation on page load.
        document.addEventListener('DOMContentLoaded', () => {
            populateEquipmentOptions();
            calculateEstimate();
        });

    </script>
</body>
</html>
